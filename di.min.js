'use strict'
let c=new Map()
let load=id=>new Promise((y, n)=>{let l=document.createElement('script')
l.onerror=()=>n(new Error(`couldn't find ${id}`))
l.onload=y
l.src='./'+id+'.js'
document.body.appendChild(l).remove()})
let resolve=(ids=[])=>{let is=ids.map(id=>{if(c.has(id)){return c.get(id).i}return load(id).then(()=>{let cd=c.get(id)
let {d,f,i}=cd
return cd.i=i?i:resolve(d).then(r=>f(...r))} )} )
return Promise.all(is)}
Object.assign(window,{define:(id,d,f)=>{if(!c.has(id)){c.set(id,{d,f})}},require:(...args)=>{let [c,...d]=args.reverse()
resolve(d.reverse()).then(r=>c(...r))}})